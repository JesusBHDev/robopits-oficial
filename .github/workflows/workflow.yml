name: PWA CI/CD Workflow

on:
  push:
    branches:
      - develop # Pruebas internas
      - 'feature/*' # Ramas de características de programadores
      - main # Solo pruebas y compilación
  pull_request:
    branches:
      - develop # Validación de cambios antes de fusionar en desarrollo
      - main # Validación de cambios antes de fusionar en producción
  workflow_dispatch: # Activación manual opcional

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run Format
        run: npm run format

      - name: Run Tests
        run: npm test -- --detectOpenHandles

      - name: Build for production
        run: npm run build

      - name: Cargar artefacto de compilación
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ./build
          retention-days: 7

  deploy:
    needs: build # Se ejecuta después de build
    runs-on: ubuntu-latest

    steps:
      - name: Descargar artefacto de compilación
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: ./

      - name: Verificar estructura de directorios después de la descarga
        run: ls -R /home/runner/work/robopits-oficial/robopits-oficial # Verifica todos los archivos descargados

      - name: Instalar lftp
        run: sudo apt-get install lftp

      - name: Desplegar en Hostinger via FTP
        env:
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          HOSTINGER_PASSWORD: ${{ secrets.HOSTINGER_PASSWORD }}
        run: |
          lftp -u $HOSTINGER_USER,$HOSTINGER_PASSWORD $HOSTINGER_HOST <<-EOF
          set ssl:verify-certificate no
          cd public_html
          mirror -R --delete /home/runner/work/robopits-oficial/robopits-oficial . 
          bye
          EOF
